## Git

Convención de mensajes de commit semánticos:

plaintext
<type>[(scope)][!]: <description> [#ticket]

ejemplos: 
fix: Pass correlationId on FireAsync. #23001
fix(aws): Pass correlationId on FireAsync. #23001
feat(aws)!: Pass correlationId on FireAsync. #23001

types: feat|fix|refactor|style|doc|build|test


### type
Tipo de cambio realizado.

- wip: En progreso, -work in progress-, sólo en ramas de desarrollo
- feat: Nueva funcionalidad
- fix: Corrección de errores detectados y en ambiente de pruebas o producción.
- refactor: Modificación del código sin cambiar su funcionalidad.
- style: Cambios de formato, como corrección de espacios, comas, etc., que no afectan la funcionalidad del código.
- doc: Cambios en la documentación.
- build: Cambios que afectan el sistema de construcción o dependencias externas.
- test: Para agregar o corregir pruebas.

### scope: (Opcional) 
El ámbito del cambio. Puede ser el nombre del módulo o componente afectado (por ejemplo, aws, auth, ui).

- auth: Servicios de autenticación o autorización
- Modulos: Emisión | Recepción | DocumentoSoporte | Nómina

### important !: (Opcional) 
Indica que el commit incluye un cambio que rompe compatibilidad (breaking change).

### description: 
Una breve descripción del cambio realizado. Debe ser concisa y en tiempo presente.

### #ticket: 
(Opcional) Número del ticket o referencia a la tarea relacionada.